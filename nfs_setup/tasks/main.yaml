---

# tasks for nfs_setup
- name: Install requirements
  become: true
  ansible.builtin.package:
    name: "{{ dependencies_install }}"
    state: present

- name: Add host entry
  become: true
  ansible.builtin.lineinfile:
    path: "{{ file_hosts }}"
    line: "{{ hosts_entry }}"
    create: true
    mode: "0644"

- name: Create mount point directory
  ansible.builtin.include_tasks: create_mountdir.yaml
  loop: "{{ nfs__targets }}"

- name: Copy mount template to host
  become: true
  ansible.builtin.template:
    src: mountfile.mount.j2
    dest: "{{ (path_systemd_unitfiles, \
          (nfs__mount_dir, (item.mount_point + mountfile_ext)) | ansible.builtin.path_join \
          | regex_replace('^\/?(.*)$', '\\1') \
          | ansible.builtin.split('/') | join('-')) \
        | ansible.builtin.path_join }}"
    mode: "0644"
  loop: "{{ nfs__targets }}"

- name: Copy automount template to host
  become: true
  ansible.builtin.template:
    src: mountfile.automount.j2
    dest: "{{ (path_systemd_unitfiles, \
          (nfs__mount_dir, (item.mount_point + automountfile_ext)) | ansible.builtin.path_join \
          | regex_replace('^\/?(.*)$', '\\1') \
          | ansible.builtin.split('/') | join('-')) \
        | ansible.builtin.path_join }}"
    mode: "0644"
  loop: "{{ nfs__targets }}"

- name: Enable automount service on host
  become: true
  ansible.builtin.systemd:
    daemon-reload: true
    name: "{{ (nfs__mount_dir, (item.mount_point + automountfile_ext)) | ansible.builtin.path_join \
          | regex_replace('^\/?(.*)$', '\\1') \
          | ansible.builtin.split('/') | join('-') }}"
    state: started
    enabled: true
  loop: "{{ nfs__targets }}"

...
